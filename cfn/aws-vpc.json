{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation  multi-tier-vpc, creates 3 subnets in each AZ for public and private. private subnet associated with own private routing table in each AZ, this is so we can create ha nat instances later",

  "Parameters" : {

    "KeyName": {
      "Default": "bootstrap",
      "Description" : "key pair",
      "Type": "String"
    },

    "SSHFrom" : {
      "Description" : "Lockdown SSH access network",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "10.10.10.0/32",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
    },

    "VpcID" : {
	"Description" : "Existing VPCID",
	"Type" : "String",
	"Default" : "vpc-x1"
    },
    "VpnGatewayID" : {
	"Description" : "Existing VPN Gateway ID",
	"Type" : "String",
	"Default" : "vgw-x1"
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "64" },
      "m1.small"    : { "Arch" : "64" },
      "m1.medium"   : { "Arch" : "64" },
      "m1.large"    : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "m2.xlarge"   : { "Arch" : "64" },
      "m2.2xlarge"  : { "Arch" : "64" },
      "m2.4xlarge"  : { "Arch" : "64" },
      "m3.xlarge"   : { "Arch" : "64" },
      "m3.2xlarge"  : { "Arch" : "64" },
      "c1.medium"   : { "Arch" : "64" },
      "c1.xlarge"   : { "Arch" : "64" },
      "cc1.4xlarge" : { "Arch" : "64Cluster" },
      "cc2.8xlarge" : { "Arch" : "64Cluster" },
      "cg1.4xlarge" : { "Arch" : "64GPU" }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "32" : "ami-a0cd60c9", "64" : "ami-aecd60c7", "64Cluster" : "ami-a8cd60c1",      "64GPU" : "ami-eccf6285" },
      "us-west-2"      : { "32" : "ami-46da5576", "64" : "ami-48da5578", "64Cluster" : "NOT_YET_SUPPORTED", "64GPU" : "NOT_YET_SUPPORTED" },
      "us-west-1"      : { "32" : "ami-7d4c6938", "64" : "ami-734c6936", "64Cluster" : "NOT_YET_SUPPORTED", "64GPU" : "NOT_YET_SUPPORTED" },
      "eu-west-1"      : { "32" : "ami-61555115", "64" : "ami-6d555119", "64Cluster" : "ami-67555113",      "64GPU" : "NOT_YET_SUPPORTED" },
      "ap-southeast-1" : { "32" : "ami-220b4a70", "64" : "ami-3c0b4a6e", "64Cluster" : "NOT_YET_SUPPORTED", "64GPU" : "NOT_YET_SUPPORTED" },
      "ap-southeast-2" : { "32" : "ami-b3990e89", "64" : "ami-bd990e87", "64Cluster" : "NOT_YET_SUPPORTED", "64GPU" : "NOT_YET_SUPPORTED" },
      "ap-northeast-1" : { "32" : "ami-2a19aa2b", "64" : "ami-2819aa29", "64Cluster" : "NOT_YET_SUPPORTED", "64GPU" : "NOT_YET_SUPPORTED" },
      "sa-east-1"      : { "32" : "ami-f836e8e5", "64" : "ami-fe36e8e3", "64Cluster" : "NOT_YET_SUPPORTED", "64GPU" : "NOT_YET_SUPPORTED" }
    },

    "SubnetConfig" : {
      "VPC"     : { "CIDR" : "10.248.0.0/16" },
      "public-subnet-1a"  : { "CIDR" : "10.248.1.0/24" },
      "private-subnet-1a" : { "CIDR" : "10.248.2.0/24" },
      "public-subnet-1b"  : { "CIDR" : "10.248.3.0/24" },
      "private-subnet-1b" : { "CIDR" : "10.248.4.0/24" },
      "public-subnet-1c"  : { "CIDR" : "10.248.5.0/24" },
      "private-subnet-1c" : { "CIDR" : "10.248.6.0/24" }
    },
    "OfficeNetworks" : {
      "DC1" : { "CIDR" : "10.252.0.0/16" },
      "DC2" : { "CIDR" : "10.253.0.0/16" },
      "DeveloperSuperNet" : { "CIDR" : "10.249.0.0/16" },
      "PrivateSuperNet" : { "CIDR" : "10.252.0.0/15" }
    }
  },

  "Resources" : {
    "PublicSubnet1a" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcID" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "public-subnet-1a", "CIDR" ]},
	"AvailabilityZone" : "eu-west-1a",
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value" : "Public1a" },
          { "Key" : "Network", "Value" : "public" }
        ]
      }
    },
    "PublicSubnet1b" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcID" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "public-subnet-1b", "CIDR" ]},
	"AvailabilityZone" : "eu-west-1b",
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value" : "Public1b" },
          { "Key" : "Network", "Value" : "public" }
        ]
      }
    },
    "PublicSubnet1c" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcID" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "public-subnet-1c", "CIDR" ]},
	"AvailabilityZone" : "eu-west-1c",
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value" : "Public1c" },
          { "Key" : "Network", "Value" : "public" }
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value" : "PublicGW" },
          { "Key" : "Network", "Value" : "public" }
        ]
      }
    },

    "GatewayToInternet" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VpcID" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcID" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value" : "PublicRT" },
          { "Key" : "Network", "Value" : "public" }
        ]
      }
    },

    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "GatewayToInternet",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "Public1ASubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet1a" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    "Public1BSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet1b" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    "Public1CSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet1c" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    "PublicSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet1b" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    "PublicSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet1c" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PublicNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcID" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "Public" },
          { "Key" : "Name", "Value" : "PublicACL" }
        ]
      }
    },

    "InboundHTTPPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "80", "To" : "80" }
      }
    },

    "InboundHTTPSPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "101",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "443", "To" : "443" }
      }
    },

    "InboundSSHPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "102",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Ref" : "SSHFrom" },
        "PortRange" : { "From" : "22", "To" : "22" }
      }
    },

    "InboundEmphemeralPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "103",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "1024", "To" : "65535" }
      }
    },
    "InboundICMPPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "104",
	"Icmp" : { "Code" : "-1", "Type" : "-1" },
        "Protocol" : "1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
       }
      },

    "OutboundTCPPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },
    "OutboundUDPPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "101",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },
    "OutboundICMPPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "102",
	"Icmp" : { "Code" : "-1", "Type" : "-1" },
        "Protocol" : "1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "PublicSubnetNetworkAclAssociation1a" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet1a" },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },
    "PublicSubnetNetworkAclAssociation1b" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet1b" },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },
    "PublicSubnetNetworkAclAssociation1c" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet1c" },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "PrivateSubnet1a" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcID" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "private-subnet-1a", "CIDR" ]},
	"AvailabilityZone" : "eu-west-1a",
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value" : "Private1a" },
          { "Key" : "Network", "Value" : "private" }
        ]
      }
    },
    "PrivateSubnet1b" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcID" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "private-subnet-1b", "CIDR" ]},
	"AvailabilityZone" : "eu-west-1b",
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value" : "Private1b" },
          { "Key" : "Network", "Value" : "private" }
        ]
      }
    },
    "PrivateSubnet1c" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcID" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "private-subnet-1c", "CIDR" ]},
	"AvailabilityZone" : "eu-west-1c",
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value" : "Private1c" },
          { "Key" : "Network", "Value" : "private" }
        ]
      }
    },

    "PrivateRouteTableA" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcID" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value" : "PrivateA" },
          { "Key" : "Network", "Value" : "private" }
        ]
      }
    },
    "PrivateRouteTableB" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcID" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value" : "PrivateB" },
          { "Key" : "Network", "Value" : "private" }
        ]
      }
    },
    "PrivateRouteTableC" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcID" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Name", "Value" : "PrivateC" },
          { "Key" : "Network", "Value" : "private" }
        ]
      }
    },

    "Private1ASubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet1a" },
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" }
      }
    },
    "Private1BSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet1b" },
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" }
      }
    },
    "Private1CSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet1c" },
        "RouteTableId" : { "Ref" : "PrivateRouteTableC" }
      }
    },

    "privateVPNGatewayRouteProp" : {
  	"Type" : "AWS::EC2::VPNGatewayRoutePropagation",
  	"Properties" : {
    		"RouteTableIds" : [{"Ref" : "PrivateRouteTableA"},{"Ref" : "PrivateRouteTableB"},{"Ref" : "PrivateRouteTableC"}],
                "VpnGatewayId" : { "Ref" : "VpnGatewayID" }
	}
     },

    "PrivateNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcID" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "network", "Value" : "private" },
          { "Key" : "Name", "Value" : "PrivateACL" }
        ]
      }
    },

    "InboundTCPPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },
    "InboundICMPPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "101",
	"Icmp" : { "Code" : "-1", "Type" : "-1" },
        "Protocol" : "1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "VPC","CIDR" ]},
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },
    "InboundGC2ICMPPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "102",
	"Icmp" : { "Code" : "-1", "Type" : "-1" },
        "Protocol" : "1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Fn::FindInMap" : [ "OfficeNetworks", "PrivateSuperNet","CIDR" ]},
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },
    "InboundUDPPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "103",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },
    "InboundDeveloperICMPPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "104",
	"Icmp" : { "Code" : "-1", "Type" : "-1" },
        "Protocol" : "1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Fn::FindInMap" : [ "OfficeNetworks", "DeveloperSuperNet","CIDR" ]},
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "OutBoundTCPPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },
    "OutBoundUDPPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "101",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },
    "OutBoundICMPPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
        "RuleNumber" : "102",
	"Icmp" : { "Code" : "-1", "Type" : "-1" },
        "Protocol" : "1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "PrivateSubnetNetworkAclAssociation1a" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet1a" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },
    "PrivateSubnetNetworkAclAssociation1b" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet1b" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },
    "PrivateSubnetNetworkAclAssociation1c" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet1c" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    }
  },
  "Outputs" : {
    "PublicSubnet1a" : {
      "Description" : "SubnetId of the public subnet a",
      "Value" :  { "Ref" : "PublicSubnet1a" }
    },
    "PublicSubnet1b" : {
      "Description" : "SubnetId of the public subnet b",
      "Value" :  { "Ref" : "PublicSubnet1b" }
    },
    "PublicSubnet1c" : {
      "Description" : "SubnetId of the public subnet c",
      "Value" :  { "Ref" : "PublicSubnet1c" }
    },
    "PrivateSubnet1a" : {
      "Description" : "SubnetId of the private subnet a",
      "Value" :  { "Ref" : "PrivateSubnet1a" }
    },
    "PrivateSubnet1b" : {
      "Description" : "SubnetId of the private subnet b",
      "Value" :  { "Ref" : "PrivateSubnet1b" }
    },
    "PrivateSubnet1c" : {
      "Description" : "SubnetId of the private subnet c",
      "Value" :  { "Ref" : "PrivateSubnet1c" }
    }
  }
}
